"""Add test image and ground truth models

Revision ID: 26901d28cd96
Revises: 63b1daa36d74
Create Date: 2025-06-02 13:34:57.868537

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '26901d28cd96'
down_revision: Union[str, None] = '63b1daa36d74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sound_statistics')
    op.drop_table('time_based_effectiveness')
    with op.batch_alter_table('provider', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_provider_name'))

    op.drop_table('provider')
    op.drop_table('settings')
    op.drop_table('sound_effectiveness')
    op.drop_table('providermodel')
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.drop_column('last_image_hash')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_image_hash', sa.VARCHAR(), nullable=True))

    op.create_table('providermodel',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('provider_id', sa.INTEGER(), nullable=False),
    sa.Column('model_id', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('model_type', sa.VARCHAR(), nullable=False),
    sa.Column('supports_vision', sa.BOOLEAN(), nullable=False),
    sa.Column('max_tokens', sa.INTEGER(), nullable=True),
    sa.Column('cost_per_1k_tokens', sa.FLOAT(), nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), nullable=False),
    sa.Column('config', sqlite.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sound_effectiveness',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('detection_id', sa.INTEGER(), nullable=False),
    sa.Column('foe_type', sa.VARCHAR(), nullable=False),
    sa.Column('sound_file', sa.VARCHAR(), nullable=False),
    sa.Column('playback_method', sa.VARCHAR(), nullable=False),
    sa.Column('foes_before', sa.INTEGER(), nullable=False),
    sa.Column('foes_after', sa.INTEGER(), nullable=False),
    sa.Column('confidence_before', sa.FLOAT(), nullable=False),
    sa.Column('confidence_after', sa.FLOAT(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('wait_duration', sa.INTEGER(), nullable=False),
    sa.Column('result', sa.VARCHAR(length=7), nullable=False),
    sa.Column('effectiveness_score', sa.FLOAT(), nullable=False),
    sa.Column('follow_up_image_path', sa.VARCHAR(), nullable=True),
    sa.Column('notes', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['detection_id'], ['detections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('key', sa.VARCHAR(), nullable=False),
    sa.Column('value', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('provider',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('provider_type', sa.VARCHAR(), nullable=False),
    sa.Column('api_key', sa.VARCHAR(), nullable=True),
    sa.Column('api_base', sa.VARCHAR(), nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), nullable=False),
    sa.Column('config', sqlite.JSON(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('provider', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_provider_name'), ['name'], unique=1)

    op.create_table('time_based_effectiveness',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('foe_type', sa.VARCHAR(), nullable=False),
    sa.Column('hour_of_day', sa.INTEGER(), nullable=False),
    sa.Column('total_detections', sa.INTEGER(), nullable=False),
    sa.Column('successful_deterrents', sa.INTEGER(), nullable=False),
    sa.Column('average_effectiveness', sa.FLOAT(), nullable=False),
    sa.Column('best_sound', sa.VARCHAR(), nullable=True),
    sa.Column('best_sound_success_rate', sa.FLOAT(), nullable=False),
    sa.Column('last_updated', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sound_statistics',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('foe_type', sa.VARCHAR(), nullable=False),
    sa.Column('sound_file', sa.VARCHAR(), nullable=False),
    sa.Column('total_uses', sa.INTEGER(), nullable=False),
    sa.Column('successful_uses', sa.INTEGER(), nullable=False),
    sa.Column('partial_uses', sa.INTEGER(), nullable=False),
    sa.Column('failed_uses', sa.INTEGER(), nullable=False),
    sa.Column('success_rate', sa.FLOAT(), nullable=False),
    sa.Column('average_effectiveness', sa.FLOAT(), nullable=False),
    sa.Column('first_used', sa.DATETIME(), nullable=False),
    sa.Column('last_used', sa.DATETIME(), nullable=False),
    sa.Column('last_updated', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

"""Update FoeType enum to match sound directories

Revision ID: 31accb542a5e
Revises: 7335085f013e
Create Date: 2025-05-26 23:03:20.158838

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31accb542a5e'
down_revision: Union[str, None] = '7335085f013e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # First, migrate existing data to new values
    connection = op.get_bind()
    
    # Update existing foe_type values to new enum values
    connection.execute(sa.text("""
        UPDATE foes SET foe_type = 'rats' WHERE foe_type IN ('rodent');
    """))
    
    connection.execute(sa.text("""
        UPDATE foes SET foe_type = 'crows' WHERE foe_type IN ('crow', 'crow_like');
    """))
    
    connection.execute(sa.text("""
        UPDATE foes SET foe_type = 'cats' WHERE foe_type IN ('cat');
    """))
    
    # Keep 'unknown' as is
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('foes', schema=None) as batch_op:
        batch_op.alter_column('foe_type',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.Enum('RATS', 'CROWS', 'CATS', 'UNKNOWN', name='foetype'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('foes', schema=None) as batch_op:
        batch_op.alter_column('foe_type',
               existing_type=sa.Enum('RATS', 'CROWS', 'CATS', 'UNKNOWN', name='foetype'),
               type_=sa.VARCHAR(length=9),
               existing_nullable=False)

    # ### end Alembic commands ###

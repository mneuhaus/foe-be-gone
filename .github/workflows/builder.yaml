name: Builder

env:
  BUILD_ARGS: "--test"
  MONITORED_FILES: "build.yaml config.yaml Dockerfile rootfs"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [ published ]

jobs:
  init:
    runs-on: ubuntu-latest
    name: Initialize builds
    outputs:
      changed_addons: ${{ steps.changed_addons.outputs.addons }}
      changed: ${{ steps.changed_addons.outputs.changed }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2

      - name: Get changed files
        id: changed_files
        if: github.event_name != 'release'
        uses: jitterbit/get-changed-files@v1

      - name: Get changed add-ons
        id: changed_addons
        run: |
          # For single addon repository, always build on release or if monitored files changed
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "Release event - building addon"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "addons=[\"foe-be-gone\"]" >> $GITHUB_OUTPUT
          else
            # Check if any monitored files changed
            changed_files="${{ steps.changed_files.outputs.all }}"
            should_build=false
            
            for file in ${{ env.MONITORED_FILES }}; do
              if [[ "$changed_files" =~ $file ]]; then
                should_build=true
                break
              fi
            done
            
            if [[ "$should_build" == "true" ]]; then
              echo "Monitored files changed - building addon"
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "addons=[\"foe-be-gone\"]" >> $GITHUB_OUTPUT
            else
              echo "No monitored files changed"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          fi

  build:
    needs: init
    runs-on: ubuntu-latest
    if: needs.init.outputs.changed == 'true'
    name: Build ${{ matrix.arch }} ${{ matrix.addon }} add-on
    strategy:
      matrix:
        addon: ${{ fromJson(needs.init.outputs.changed_addons) }}
        arch: ["aarch64", "amd64"]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.2.2

      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./"

      - name: Check if add-on should be built
        id: check
        run: |
          echo "build_arch=true" >> $GITHUB_OUTPUT
          
          # Set image name and build args
          echo "image=ghcr.io/${{ github.repository_owner }}/${{ matrix.arch }}-addon-${{ matrix.addon }}" >> $GITHUB_OUTPUT
          
          # Set build args - remove --test for releases
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "build_args=" >> $GITHUB_OUTPUT
          else
            echo "build_args=--test" >> $GITHUB_OUTPUT
          fi

      - name: Login to GitHub Container Registry
        if: steps.check.outputs.build_args != '--test'
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2025.03.0
        with:
          args: |
            ${{ steps.check.outputs.build_args }} \
            --${{ matrix.arch }} \
            --target /data \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon